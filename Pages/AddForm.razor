@page "/"
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

@implements IDisposable
@using System.Net.Http.Headers
@using System.Text;
@using iTextSharp.text.pdf;
@using QRCoder;
@using iTextSharp.text;
@using System.IO;

<PageTitle>GzOffice</PageTitle>
<div style="font-family:Cairo;font-weight:700;">

	@if (!string.IsNullOrEmpty(userMessage))
	{
		if (isSuccess)
		{
			<MudAlert Severity="Severity.Success">
				<a>تم خزن الاستمارة بنجاح</a>
				<a>no: @ddid</a>
			</MudAlert>

		}

		else
		{
			<MudAlert Severity="Severity.Error">
				@userMessage
			</MudAlert>
		}
	}

	<p style="color:red">@message</p>

	<h3 style="font-family:Cairo;">استمارة المقابلة الامنية</h3>


	<EditForm Model="form" OnValidSubmit="ViewForm">
		<DataAnnotationsValidator />

		<div class="container">
			<!-- First Row -->
			<div class="row">
				<div class="col-md-4 mb-3">
					<label for="form_doc_no">رقم الحفظ</label>
					<InputNumber id="form_doc_no" @bind-Value="form.doc_no" class="form-control"></InputNumber>
					<ValidationMessage For="@(() => form.doc_no)" />

				</div>
				<div class="col-md-4 mb-3">
					<label for="form_name">الاسم</label>
					<InputText id="form_name" @bind-Value="form.name" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.name)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_id_number">رقم الهوية</label>
					<InputNumber id="form_id_number" @bind-Value="form.id_number" class="form-control"></InputNumber>
					<ValidationMessage For="@(() => form.id_number)" />
				</div>

			</div>

			<!-- Second Row -->
			<div class="row">
				<div class="col-md-4 mb-3">
					<label for="form_entity">الجهة</label>
					<InputText id="form_entity" @bind-Value="form.entity" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.entity)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_father_work">عمل الأب</label>
					<InputText id="form_father_work" @bind-Value="form.father_work" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.father_work)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_mother_name">اسم الأم</label>
					<InputText id="form_mother_name" @bind-Value="form.mother_name" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.mother_name)" />
				</div>
			</div>

			<!-- Third Row -->
			<div class="row">
				<div class="col-md-4 mb-3">
					<label for="form_mother_work">عمل الأم</label>
					<InputText id="form_mother_work" @bind-Value="form.mother_work" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.mother_work)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_wife_name">اسم الزوجة</label>
					<InputText id="form_wife_name" @bind-Value="form.wife_name" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.wife_name)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_wife_work">عمل الزوجة</label>
					<InputText id="form_wife_work" @bind-Value="form.wife_work" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.wife_work)" />
				</div>

			</div>

			<!-- Fourth Row -->
			<div class="row">
				<div class="col-md-4 mb-3">
					<label for="form_birthdate">تاريخ الولادة</label>
					<InputDate id="form_birthdate" @bind-Value="form.birthdate" class="form-control"></InputDate>
					<ValidationMessage For="@(() => form.birthdate)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_study">الدراسة</label>
					<InputText id="form_study" @bind-Value="form.study" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.study)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_bagde_color">تاريخ التخرج</label>
					<InputDate id="form_grad_year" @bind-Value="form.grad_year" class="form-control"></InputDate>
					<ValidationMessage For="@(() => form.grad_year)" />
				</div>



			</div>

			<!-- Fifth Row -->
			<div class="row">
				<div class="col-md-4 mb-3">
					<label for="form_reviewdate">تاريخ المقابلة</label>
					<InputDate id="form_reviewdate" @bind-Value="form.review_date" class="form-control"></InputDate>
					<ValidationMessage For="@(() => form.review_date)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_info_book">رقم الكتاب</label>
					<InputNumber id="form_info_book" @bind-Value="form.info_book" class="form-control"></InputNumber>
					<ValidationMessage For="@(() => form.info_book)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_seq">تسلسل</label>
					<InputNumber id="form_seq" @bind-Value="form.seq" class="form-control"></InputNumber>
					<ValidationMessage For="@(() => form.seq)" />
				</div>

			</div>

			<!-- Sixth Row -->
			<div class="row">
				<div class="col-md-4 mb-3">
					<label for="form_state">الحالة</label>
					<InputText id="form_state" @bind-Value="form.state" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.state)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_nationalism">الجنسية</label>
					<InputText id="form_nationalism" @bind-Value="form.nationalism" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.nationalism)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_religion">القومية</label>
					<InputText id="form_religion" @bind-Value="form.religion" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.religion)" />
				</div>
			</div>

			<!-- Seventh Row -->
			<div class="row">
				<div class="col-md-4 mb-3">
					<label for="form_place_govern">محافظة الإقامة</label>
					<InputText id="form_place_govern" @bind-Value="form.place_govern" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.place_govern)" />
				</div>

				<div class="col-md-4 mb-3">
					<label for="form_place_city">المدينة</label>
					<InputText id="form_place_city" @bind-Value="form.place_city" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.place_city)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_place_point">اقرب نقطة دالة</label>
					<InputText id="form_place_point" @bind-Value="form.place_point" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.place_point)" />
				</div>

			</div>

			<!-- Eighth Row -->
			<div class="row">
				<div class="col-md-4 mb-3">
					<label for="form_place_mhala">المحلة</label>
					<InputText id="form_place_mhala" @bind-Value="form.place_mhala" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.place_mhala)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_place_zuqaq">الزقاق</label>
					<InputText id="form_place_zuqaq" @bind-Value="form.place_zuqaq" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.place_zuqaq)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_place_dar">الدار</label>
					<InputText id="form_place_dar" @bind-Value="form.place_dar" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.place_dar)" />
				</div>
			</div>

			<!-- Ninth a Row -->
			<div class="row">
				<div class="col-md-4 mb-3">
					<label for="form_old_place">مكان الاقامة السابق</label>
					<InputText id="form_old_place" @bind-Value="form.old_place" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.old_place)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_bagde_color">لون الباج</label>
					<InputText id="form_bagde_color" @bind-Value="form.bagde_color" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.bagde_color)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_passport_no">رقم جواز السفر - ان وجد</label>
					<InputNumber id="form_passport_no" @bind-Value="form.passport_no" class="form-control"></InputNumber>
					<ValidationMessage For="@(() => form.passport_no)" />
				</div>

			</div>

			<!-- Ninth b Row -->

			<div class="row">

				<div class="col-md-4 mb-3">
					<label for="form_work_place">مكان العمل</label>
					<InputText id="form_work_place" @bind-Value="form.work_place" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.work_place)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_work_place2">مكان العمل السابق</label>
					<InputText id="form_work_place2" @bind-Value="form.work_place2" class="form-control"></InputText>
					<ValidationMessage For="@(() => form.work_place2)" />
				</div>
				<div class="col-md-4 mb-3">
					<label for="form_phone1">موبايل</label>
					<InputNumber id="form_phone1" @bind-Value="form.phone1" class="form-control"></InputNumber>
					<ValidationMessage For="@(() => form.phone1)" />
				</div>
			</div>


			<div class="mb-3">
				<label for="form_a1">هل يوجد لديك احتجاز او توقيف لدى اي جهة امنية عراقية سابقاً؟</label>
				<InputText id="form_a1" @bind-Value="form.a1" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a1)" />
			</div>
			<div class="mb-3">
				<label for="form_a2">هل تم اتهامك سابقاً او حالياً بأي شكوى قضائيا او في طور التحقيق؟</label>
				<InputText id="form_a2" @bind-Value="form.a2" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a2)" />
			</div>

			<div class="mb-3">
				<label for="form_a3">هل يوجد لديك حكم قضائي سابق؟</label>
				<InputText id="form_a3" @bind-Value="form.a3" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a3)" />
			</div>

			<div class="mb-3">
				<label for="form_a4">هل تم اعتقالك او احتجازك من قبل اي قوة عسكرية احنبية بعد سقوط النظام عام 2003؟</label>
				<InputText id="form_a4" @bind-Value="form.a4" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a4)" />
			</div>

			<div class="mb-3">
				<label for="form_a5">هل عملت ضمن الكيانات الامنية والحزبية المنحلة قبل عام 2003؟</label>
				<InputText id="form_a5" @bind-Value="form.a5" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a5)" />
			</div>

			<div class="mb-3">
				<label for="form_a6">هل لديك اقارب يعملون او يسكنون داخل المنطقة الخضراء؟</label>
				<InputText id="form_a6" @bind-Value="form.a6" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a6)" />
			</div>

			<div class="mb-3">
				<label for="form_a7">هل اجريت مقابلة ذات طابع امني لدى اي جهة اخرى ؟</label>
				<InputText id="form_a7" @bind-Value="form.a7" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a7)" />
			</div>

			<div class="mb-3">
				<label for="form_a8">هل سافرت خارج العراق؟ اذكر الدولة والسنة والغرض من السفر</label>
				<InputText id="form_a8" @bind-Value="form.a8" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a8)" />
			</div>

			<div class="mb-3">
				<label for="form_a9">اسماء الابناء البالغين مع ذكر التولد والعمل</label>
				<InputText id="form_a9" @bind-Value="form.a9" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a9)" />
			</div>

			<div class="mb-3">
				<label for="form_a10">اسماء الاخوة البالغين مع ذكر التولد والعمل</label>
				<InputText id="form_a10" @bind-Value="form.a10" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a10)" />
			</div>

			<div class="mb-3">
				<label for="form_a11">هل يوجد لدى افراد العائلة احتجاز او توقيف لدى اي جهة امنية عراقية سابقاً او حالياً؟</label>
				<InputText id="form_a11" @bind-Value="form.a11" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a11)" />
			</div>

			<div class="mb-3">
				<label for="form_a12">هل تم اتهام احد افراد العائلة سابقاً او حالياً بأي شكوى قضائيا او في طور التحقيق؟</label>
				<InputText id="form_a12" @bind-Value="form.a12" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a12)" />
			</div>

			<div class="mb-3">
				<label for="form_a13">هل يوجد لدى افراد العائلة حكم قضائي سابق او حالي؟</label>
				<InputText id="form_a13" @bind-Value="form.a13" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a13)" />
			</div>

			<div class="mb-3">
				<label for="form_a14">هل تم اعتقال احد افراد العائلة او احتجازه من قبل اي قوة عسكرية اجنبية بعد سقوط النظام عام 2003؟</label>
				<InputText id="form_a14" @bind-Value="form.a14" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a14)" />
			</div>

			<div class="mb-3">
				<label for="form_a15">هل احد افراد العائلة ضمن الكيانات الامنية والحزبية المنحلة قبل عام 2003؟ </label>
				<InputText id="form_a15" @bind-Value="form.a15" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a15)" />
			</div>

			<div class="mb-3">
				<label for="form_a16">هل تسلم احد الاقارب مناصب حزبية او امنية مهمة قبل عام 2003؟</label>
				<InputText id="form_a16" @bind-Value="form.a16" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a16)" />
			</div>

			<div class="mb-3">
				<label for="form_a17">هل تعرضت انت او احد افراد عائلتك او اقاربك الى عمل ارهابي؟</label>
				<InputText id="form_a17" @bind-Value="form.a17" class="form-control"></InputText>
				<ValidationMessage For="@(() => form.a17)" />
			</div>
		</div>


		<button type="submit" class="btn btn-primary float-end">خزن الاستمارة</button>
		<ValidationSummary />
	</EditForm>

	@if (!string.IsNullOrEmpty(userMessage))
	{
		if (isSuccess)
		{
			<MudAlert Severity="Severity.Success">
				<a>تم خزن الاستمارة بنجاح</a>
				<a>no: @ddid</a>
			</MudAlert>
		}
		else
		{
			<MudAlert Severity="Severity.Error">
				@userMessage
			</MudAlert>
		}
	}

	@if (!string.IsNullOrEmpty(AppoMessage))
	{
		if (isSuccessAppo)
		{
			<MudAlert Severity="Severity.Success">
				<a>تم خزن الحركة بنجاح</a>
			</MudAlert>
		}
		else
		{
			<MudAlert Severity="Severity.Error">
				@AppoMessage
			</MudAlert>
		}
	}
	}


</div>
@if (!string.IsNullOrEmpty(pdfBase64))
{
	<iframe src="data:application/pdf;base64,@pdfBase64"></iframe>
}
<button class="btn btn-primary" @onclick="test">click</button>
@code {
	bool authrized = false;
	private string UserName = "Guest";
	[Parameter]
	public int Id { get; set; }
	GzAmnform.Models.Form form = new Models.Form();
	private string AppoMessage = string.Empty;
	private bool isSuccessAppo;
	string btnText = "";
	bool IsLoading = true;
	bool deleted = false;
	string msg = "Loading ...";
	private bool DisableAddUpdateButon = false;
	private string userMessage = "";
	private bool isSuccess = false;
	private int ddid;
	private Form data;
	private string pdfBase64;
	private int zkey;
	private string message;
	protected override async Task OnInitializedAsync()
	{
		Encoding.RegisterProvider(CodePagesEncodingProvider.Instance);
		form.review_date = DateOnly.FromDateTime(DateTime.Today);
		form.username = UserName;
		//form.phone1 = (0).ToString();
		form.phone2 = (0).ToString();

	}
	public void Dispose()
	{
	}
	async Task HandleFormSubmission()
	{

	}
	public void test()
	{
		Console.Write("Test");
	}
	async Task ViewForm()
	{

		Console.Write("ViewForm");


		var filePath = Path.Combine("PDF", "fillable.pdf");
		if (!System.IO.File.Exists(filePath))
		{
			Console.WriteLine("File not found");
			return;
		}
		var fileInfo = new FileInfo(filePath);
		Form readform;
		if (!fileInfo.Exists)
		{
			Console.WriteLine("File not Found");
		}

		try
		{

			// Read the existing PDF as a byte array

			byte[] pdfBytes = System.IO.File.ReadAllBytes(filePath);

			if (pdfBytes == null || pdfBytes.Length == 0)
			{
				Console.WriteLine("Failed to read PDF file.");

			}


			readform = form;
			readform.id = 1;

			Console.WriteLine("form:     " + form.id);
			string qrcodetext = $"{readform.name}<{readform.id}<{readform.doc_no}";
			Console.WriteLine("qrcodetext:     " + qrcodetext);

			try
			{
				pdfBytes = FillFormField(pdfBytes, readform);
				Console.WriteLine("FillFormField Okay");

			}
			catch (Exception ex)
			{
				Console.WriteLine($"Error filling PDF: {ex.Message}");


			}
			try
			{


				pdfBytes = FillPdfFormFieldsWithQRCode(pdfBytes, qrcodetext);
				if (pdfBytes == null || pdfBytes.Length == 0)
				{
					Console.WriteLine("Error QR after filling form fields." + readform);

				}
			}
			catch (Exception ex)
			{
				Console.WriteLine($"Error filling QR CODE: {ex.Message}");


			}
			//Return the filled PDF as a file to the client

			pdfBase64 = Convert.ToBase64String(pdfBytes);
			Console.WriteLine("pdfBase64:   ", pdfBase64);
			var base64Url = $"data:application/pdf;base64,{pdfBase64}";

			// شغّل JavaScript حتى يفتح التبويب الجديد
			await JSRuntime.InvokeVoidAsync("openPdfFromBase64", pdfBase64);


		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error OUT: {ex.Message}");

		}
	}

	public static byte[] FillFormField(byte[] pdfBytes, Form readForm)
	{
		try
		{
			using (MemoryStream inputPdfStream = new MemoryStream(pdfBytes))
			using (MemoryStream outputPdfStream = new MemoryStream())
			{
				using (PdfReader reader = new PdfReader(inputPdfStream))
				using (PdfStamper stamper = new PdfStamper(reader, outputPdfStream))
				{
					// Get the form fields
					AcroFields fields = stamper.AcroFields;

					// Set the font for the field to an Arabic-compatible font
					BaseFont bf = BaseFont.CreateFont("Arial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
					fields.AddSubstitutionFont(bf);

					// Fill the specific field with Arabic text
					fields.SetField("1", readForm.doc_no.ToString());
					fields.SetField("2", readForm.bagde_color.ToString());
					fields.SetField("3", readForm.name.ToString());
					fields.SetField("4", readForm.entity.ToString());
					fields.SetField("5", readForm.id.ToString());
					fields.SetField("6", readForm.info_book.ToString());
					fields.SetField("7", readForm.seq.ToString());
					fields.SetField("8", readForm.review_date.ToString());
					fields.SetField("12", readForm.name.ToString());
					fields.SetField("13", readForm.birthdate.ToString());
					fields.SetField("14", readForm.state.ToString());
					fields.SetField("15", readForm.nationalism.ToString());
					fields.SetField("16", readForm.religion.ToString());
					string concatenatedValue = $"{readForm.place_govern} - {readForm.place_city} - {readForm.place_mhala} - {readForm.place_zuqaq} - {readForm.place_dar}";
					fields.SetField("17", concatenatedValue);
					fields.SetField("18", readForm.old_place.ToString());

					fields.SetField("19", readForm.phone1.ToString());
					fields.SetField("20", readForm.phone2.ToString());
					fields.SetField("21", readForm.work_place.ToString());
					fields.SetField("22", readForm.work_place2.ToString());
					fields.SetField("23", readForm.study.ToString());
					fields.SetField("24", readForm.grad_year.ToString());
					fields.SetField("34", readForm.father_work.ToString());
					fields.SetField("33", readForm.father_work.ToString());
					fields.SetField("35", readForm.mother_name.ToString());
					fields.SetField("36", readForm.mother_work.ToString());
					fields.SetField("37", readForm.wife_name.ToString());
					fields.SetField("38", readForm.wife_work.ToString());

					fields.SetField("a1", readForm.a1.ToString());
					fields.SetField("a2", readForm.a2.ToString());
					fields.SetField("a3", readForm.a3.ToString());
					fields.SetField("a4", readForm.a4.ToString());
					fields.SetField("a5", readForm.a5.ToString());
					fields.SetField("a6", readForm.a6.ToString());
					fields.SetField("a7", readForm.a7.ToString());
					fields.SetField("a8", readForm.a8.ToString());
					fields.SetField("a9", readForm.a9.ToString());
					fields.SetField("a10", readForm.a10.ToString());
					fields.SetField("a11", readForm.a11.ToString());
					fields.SetField("a12", readForm.a12.ToString());
					fields.SetField("a13", readForm.a13.ToString());
					fields.SetField("a14", readForm.a14.ToString());
					fields.SetField("a15", readForm.a15.ToString());
					fields.SetField("a16", readForm.a16.ToString());
					fields.SetField("a17", readForm.a17.ToString());


					// Flatten the form
					stamper.FormFlattening = true;
				}

				// Return the modified PDF as a byte array
				return outputPdfStream.ToArray();
			}
		}
		catch (Exception ex)
		{
			// Handle or log the exception
			Console.WriteLine("Error occurred1: " + ex.Message);
			return null;
		}
	}
	private byte[] FillPdfFormFieldsWithQRCode(byte[] pdfBytes, string qrCodeValue)
	{


		try
		{
			using (var pdfReader = new iTextSharp.text.pdf.PdfReader(new MemoryStream(pdfBytes)))
			using (var outputMemoryStream = new MemoryStream())
			using (var pdfStamper = new iTextSharp.text.pdf.PdfStamper(pdfReader, outputMemoryStream))
			{
				var pdfFormFields = pdfStamper.AcroFields;



				// Generate QR Code
				//var qrCodeValue = "زيد محمد خضر>123123>ادم"; // Replace with your QR code data
				var qrCodeImageBytes = GenerateQRCodeImage(qrCodeValue);

				// Create a QR code image stamp
				var qrCodeImage = Image.GetInstance(qrCodeImageBytes);
				qrCodeImage.SetAbsolutePosition(50, 650); // Adjust the position as needed

				// Add the image stamp to the PDF
				var contentByte = pdfStamper.GetOverContent(1); // Page number, adjust as needed
				contentByte.AddImage(qrCodeImage);

				pdfStamper.FormFlattening = true; // Optionally flatten the fields to make them read-only
				pdfStamper.Close();

				return outputMemoryStream.ToArray();
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error filling PDF form fields: {ex.Message}");
		}

		return null;
	}

	private byte[] GenerateQRCodeImage(string qrCodeText)
	{
		try
		{
			var qrGenerator = new QRCodeGenerator();
			var qrCodeData = qrGenerator.CreateQrCode(qrCodeText, QRCodeGenerator.ECCLevel.Q);
			var qrCode = new PngByteQRCode(qrCodeData);
			return qrCode.GetGraphic(2); // Adjust the size as needed
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error generating QR code image: {ex.Message}");
		}

		return null;
	}

}
